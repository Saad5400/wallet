<?php

namespace App\Models;

use App\Enums\RecordType;
use Illuminate\Database\Eloquent\Casts\Attribute;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\MorphToMany;
use Stancl\Tenancy\Contracts\Tenant as TenantContract;
use Stancl\Tenancy\Database\Models\Tenant as BaseTenant;

class Tenant extends BaseTenant implements TenantContract
{
    protected $keyType = 'string';
    protected $fillable = [
        'id',
        'month_start_date',
        'data'
    ];

    protected static function boot(): void
    {
        parent::boot();

        static::created(function (Tenant $tenant) {
            // إنشاء حساب أساسي
            $tenant->accounts()->create([
                'name' => 'كاش',
            ]);

            \DB::transaction(function () use ($tenant) {

                // تعريف تصنيفات الصرف مع التصنيفات الفرعية والإيموجيات المناسبة
                $expenseCategories = [
                    'السكن والخدمات' => [
                        'الإيجار' => '🏠',
                        'الصيانة' => '🔧',
                        'الكهرباء' => '⚡',
                        'الماء' => '💧',
                        'الغاز' => '🔥',
                        'الحارس' => '👮',
                        'الجمعية' => '🤝',
                    ],
                    'المواد الغذائية والمستلزمات المنزلية' => [
                        'البقالة' => '🛒',
                        'المواد الغذائية' => '🍎',
                        'مستلزمات المنزل' => '🏠',
                        'الذبائح' => '🍖',
                        'الولائم' => '🍽️',
                    ],
                    'المواصلات والتنقل' => [
                        'البنزين' => '⛽',
                        'صيانة السيارة' => '🔧',
                        'التأمين' => '🛡️',
                        'التاكسي' => '🚕',
                        'النقل العام' => '🚌',
                        'التوصيل الخاص' => '🚚',
                        'إيجار سيارة' => '🚗',
                        'المخالفات' => '🚨',
                    ],
                    'الاتصالات والتقنية' => [
                        'اشتراكات الاتصالات' => '📞',
                        'الإنترنت' => '🌐',
                        'الجوال' => '📱',
                        'الأجهزة الإلكترونية' => '💻',
                    ],
                    'الصحة والعناية الشخصية' => [
                        'المستشفى' => '🏥',
                        'العيادات' => '🩺',
                        'الأدوية' => '💊',
                        'النظارات' => '👓',
                        'التأمين الطبي' => '🩹',
                        'مستلزمات طبية' => '🩺',
                        'الحلاق' => '✂️',
                        'الصالون' => '💇‍♀️',
                        'العناية بالبشرة' => '🧴',
                    ],
                    'التعليم والتطوير' => [
                        'المدارس' => '🏫',
                        'الجامعات' => '🎓',
                        'الدورات التدريبية' => '📚',
                        'الكتب' => '📖',
                        'القرطاسية' => '✏️',
                        'الأدوات الدراسية' => '📝',
                        'التعليم الإلكتروني' => '💻',
                    ],
                    'المطاعم والمقاهي' => [
                        'المطاعم' => '🍽️',
                        'القهوة' => '☕',
                        'العصائر' => '🍹',
                        'الحلويات' => '🍰',
                        'التوصيل' => '🚚',
                    ],
                    'التسوق والمستلزمات الشخصية' => [
                        'الملابس' => '👗',
                        'الأحذية' => '👟',
                        'العطور' => '🌸',
                        'الإكسسوارات' => '💍',
                        'الساعات' => '⏰',
                        'الحقائب' => '👜',
                        'الأثاث' => '🛋️',
                        'مستلزمات التجميل' => '💄',
                    ],
                    'الترفيه والسفر' => [
                        'تذاكر السفر' => '🎟️',
                        'الفنادق' => '🏨',
                        'الرحلات' => '✈️',
                        'السينما' => '🎬',
                        'الترفيه العائلي' => '👨‍👩‍👧‍👦',
                        'الألعاب' => '🎮',
                        'الاشتراكات الرقمية' => '💻',
                        'النوادي الرياضية' => '🏋️',
                    ],
                    'العائلة والأصدقاء' => [
                        'مصروف الأسرة' => '👪',
                        'الهدايا' => '🎁',
                        'المناسبات' => '🎉',
                        'دعم الأهل' => '🤝',
                        'مصاريف الأطفال' => '🧒',
                        'الخادمة' => '🧹',
                        'الحضانة' => '👶',
                        'الصدقات' => '🤲',
                        'الزكاة' => '🕌',
                        'الكفالات' => '💸',
                        'الأوقاف الخيرية' => '🏛️',
                    ],
                    'الديون والالتزامات المالية' => [
                        'أقساط البنك' => '💳',
                        'أقساط السيارة' => '🚘',
                        'أقساط العقار' => '🏢',
                        'سداد الديون' => '💵',
                        'التمويل الشخصي' => '🏦',
                        'بطاقات الائتمان' => '💳',
                    ],
                    'الادخار والاستثمار' => [
                        'ادخار شهري' => '💰',
                        'شراء ذهب' => '🥇',
                        'شراء أسهم' => '📈',
                        'الصناديق الاستثمارية' => '📊',
                        'التأمين الاستثماري' => '💼',
                    ],
                    'المصاريف الطارئة' => [
                        'الإصلاحات المفاجئة' => '🛠️',
                        'المصاريف الصحية الطارئة' => '🚑',
                        'الغرامات' => '🚨',
                        'المساعدات الطارئة' => '🆘',
                    ],
                ];

                // إنشاء تصنيفات الصرف مع الإيموجيات في التصنيفات الفرعية
                foreach ($expenseCategories as $mainCategory => $subCategories) {
                    $category = $tenant->categories()->create([
                        'name' => $mainCategory,
                        'type' => RecordType::expense,
                    ]);
                    foreach ($subCategories as $subCategoryName => $emoji) {
                        $category->subCategories()->create([
                            'tenant_id' => $tenant->id,
                            'name' => implode(' ', [$emoji, $subCategoryName]),
                        ]);
                    }
                }

                // تعريف تصنيفات الدخل مع التصنيفات الفرعية والإيموجيات المناسبة
                $incomeCategories = [
                    'الراتب الشهري' => [
                        'الوظيفة الأساسية' => '👔',
                        'العمل الجزئي' => '⏳',
                        'المكافآت' => '🎉',
                    ],
                    'الأعمال الحرة' => [
                        'المشاريع الخاصة' => '🏢',
                        'التجارة الإلكترونية' => '💻',
                        'الاستشارات' => '🗣️',
                        'المهن اليدوية' => '🛠️',
                    ],
                    'الاستثمارات' => [
                        'أرباح الأسهم' => '📈',
                        'أرباح الصناديق الاستثمارية' => '📊',
                        'العقارات المؤجرة' => '🏘️',
                        'بيع الذهب أو العملات' => '💰',
                    ],
                    'الدعم والمساعدات' => [
                        'الدعم الحكومي' => '🏛️',
                        'مساعدات أسرية' => '👨‍👩‍👧‍👦',
                        'الضمان الاجتماعي' => '🤝',
                        'الجمعيات الخيرية' => '🤲',
                    ],
                    'المكافآت والحوافز' => [
                        'مكافآت دراسية' => '🎓',
                        'مكافآت وظيفية' => '🏆',
                        'مكافآت نهاية الخدمة' => '🥳',
                    ],
                    'الإيجارات' => [
                        'إيجار الشقق' => '🏠',
                        'المحلات' => '🏬',
                        'الأراضي' => '🌳',
                        'المزارع' => '🚜',
                    ],
                    'الأرباح الموسمية' => [
                        'مواسم الحج والعمرة' => '🕋',
                        'المواسم الزراعية' => '🌾',
                        'المواسم التجارية' => '🛍️',
                    ],
                    'المردود الرقمي' => [
                        'عوائد القنوات والمنصات الرقمية' => '📺',
                        'الإعلانات' => '📢',
                        'التسويق بالعمولة' => '💸',
                    ],
                    'التعويضات والمستحقات' => [
                        'مستحقات متأخرة' => '⏳',
                        'تعويضات شركات التأمين' => '🛡️',
                        'مستحقات تقاعدية' => '👴',
                    ],
                    'القروض والسُلفات' => [
                        'مبالغ مستردة من أفراد' => '🤝',
                        'سلف مؤقتة' => '⏱️',
                    ],
                    'الهدايا والجوائز' => [
                        'جوائز نقدية' => '🏆',
                        'هدايا مالية' => '🎁',
                    ],
                    'الادخار والاسترداد' => [
                        'عوائد التوفير' => '💰',
                        'الاسترداد النقدي' => '🔙',
                        'برامج الولاء' => '🏅',
                    ],
                ];

                // إنشاء تصنيفات الدخل مع الإيموجيات في التصنيفات الفرعية
                foreach ($incomeCategories as $mainCategory => $subCategories) {
                    $category = $tenant->categories()->create([
                        'name' => $mainCategory,
                        'type' => RecordType::income,
                    ]);
                    foreach ($subCategories as $subCategoryName => $emoji) {
                        $category->subCategories()->create([
                            'tenant_id' => $tenant->id,
                            'name' => implode(' ', [$emoji, $subCategoryName]),
                        ]);
                    }
                }
            });
        });
    }


    public function users(): MorphToMany
    {
        return $this->morphedByMany(User::class, User::$morphName, User::$tenantPivotTable, User::$tenantForeignKey, 'tenantable_id');
    }

    public function accounts(): HasMany
    {
        return $this->hasMany(Account::class);
    }

    public function categories(): HasMany
    {
        return $this->hasMany(Category::class);
    }

    public function subCategories(): HasMany
    {
        return $this->hasMany(SubCategory::class);
    }

    public function records(): HasMany
    {
        return $this->hasMany(Record::class);
    }
}
